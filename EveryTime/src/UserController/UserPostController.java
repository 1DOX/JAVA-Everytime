/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserController;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import main.EveryTime_Main;
import main.databaseSQL;
import SingletonPattern.UserInfo;

/**
 *
 * @author USER
 */
public class UserPostController extends databaseSQL {
    UserInfo userinfo = UserInfo.getInstance();
    /**
     * Creates new form OwnPostController
     */
    public UserPostController() {
        initComponents();
        updateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        PostDelete = new javax.swing.JButton();
        PostModify = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        boardTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("휴먼편지체", 0, 20)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Everytime");

        jLabel2.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        jLabel2.setText("본인 게시글");

        Back.setFont(new java.awt.Font("맑은 고딕", 0, 14)); // NOI18N
        Back.setText("뒤로가기");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        PostDelete.setBackground(new java.awt.Color(153, 0, 0));
        PostDelete.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
        PostDelete.setForeground(new java.awt.Color(255, 255, 255));
        PostDelete.setText("삭제하기");
        PostDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostDeleteActionPerformed(evt);
            }
        });

        PostModify.setBackground(new java.awt.Color(153, 0, 0));
        PostModify.setFont(new java.awt.Font("맑은 고딕", 0, 15)); // NOI18N
        PostModify.setForeground(new java.awt.Color(255, 255, 255));
        PostModify.setText("수정하기");
        PostModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostModifyActionPerformed(evt);
            }
        });

        boardTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
            },
            new String [] {
                "게시판", "제목","내용"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [0];
            }
        });
        jScrollPane2.setViewportView(boardTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(PostModify)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PostDelete))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                        .addComponent(Back)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(Back))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PostDelete)
                    .addComponent(PostModify))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // 뒤로가기
        dispose();
    }//GEN-LAST:event_BackActionPerformed

    private void PostDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostDeleteActionPerformed
        // 삭제하기
        // 삭제 버튼
        try {
        dbLoad();
        try {
            int row = boardTable.getSelectedRow();
            deleteData("post", "userNum", "postContent", userinfo.UserNum, (String)boardTable.getValueAt(row, 2));
             JOptionPane.showMessageDialog(this, "선택된 게시글 삭제완료", "메세지", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "sql오류 : ."+ex, "메세지", JOptionPane.INFORMATION_MESSAGE);
        }
        updateTable();
        dbClose();
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "삭제할 게시글을 선택하세요", "메세지", JOptionPane.INFORMATION_MESSAGE);
        } 
    }//GEN-LAST:event_PostDeleteActionPerformed

    private void PostModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostModifyActionPerformed
        // 게시글 수정
        try {
        int row = boardTable.getSelectedRow();
        
        String Title= (String)boardTable.getValueAt(row, 1);
        String Content = (String)boardTable.getValueAt(row, 2);
        
        dispose();
        new MyPostModify(Title,Content).setVisible(true);
        } catch (ArrayIndexOutOfBoundsException ex) {
            JOptionPane.showMessageDialog(this, "수정할 게시글을 선택하세요", "메세지", JOptionPane.INFORMATION_MESSAGE);
        } 
    }//GEN-LAST:event_PostModifyActionPerformed

    private void updateTable() {
        DefaultTableModel model = (DefaultTableModel) boardTable.getModel(); // DefaultTableModel클래스로 테이블의 모델을 get하고
        model.setNumRows(0);
        dbLoad();
        // 현재 사용자의 알림을 테이블에 보여줌
        try {
            String sql="select boardTitle, postTitle, postContent from post where userNum = '"+userinfo.UserNum+ "'";
            PreparedStatement st = conn.prepareStatement(sql);
            rs = st.executeQuery();
            while(rs.next()) {
                String boardTitle = rs.getString("boardTitle");
                String postTitle = rs.getString("postTitle");
                String postContent = rs.getString("postContent");
                
                Object data[] = {boardTitle,postTitle, postContent}; 
                model.addRow(data);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "sql오류 : ."+ex, "메세지", JOptionPane.INFORMATION_MESSAGE);
        }
        dbClose();
        
        boardTable.getTableHeader().setReorderingAllowed(false);
        boardTable.getTableHeader().setResizingAllowed(false);
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserPostController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserPostController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserPostController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserPostController.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserPostController().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton PostDelete;
    private javax.swing.JButton PostModify;
    private javax.swing.JTable boardTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
